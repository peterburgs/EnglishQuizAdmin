[{"/Users/thinhle/dev/react/english-quiz-administrator/src/index.js":"1","/Users/thinhle/dev/react/english-quiz-administrator/src/reportWebVitals.js":"2","/Users/thinhle/dev/react/english-quiz-administrator/src/App.js":"3","/Users/thinhle/dev/react/english-quiz-administrator/src/app/store.js":"4","/Users/thinhle/dev/react/english-quiz-administrator/src/App.styles.js":"5","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/Topic.js":"6","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/AuthSlice.js":"7","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Auth.js":"8","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Auth.styles.js":"9","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Logout/Logout.js":"10","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/ResolveAuth/ResolveAuth.js":"11","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/Layout/Layout.js":"12","/Users/thinhle/dev/react/english-quiz-administrator/src/components/ElevationScroll/ElevationScroll.js":"13","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/Layout/Layout.styles.js":"14","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/Sidebar.js":"15","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/NavigationItem/NavigationItem.js":"16","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/NavigationItem/NavigationItem.styles.js":"17","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/NavLink/NavLink.js":"18","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/Sidebar.js":"19","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/NavigationItem/NavigationItem.js":"20","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/NavigationItem/NavigationItem.styles.js":"21","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/SideBar.js":"22","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/SideBar.styles.js":"23","/Users/thinhle/dev/react/english-quiz-administrator/src/api/index.js":"24","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/ContentContainer/ContentContainer.js":"25","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/ContentContainer/ContentContainer.styles.js":"26","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/Topic.styles.js":"27","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicTable/TopicTable.js":"28","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/EditTopicDialog/EditTopicDialog.js":"29","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicSlice.js":"30","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/EditTopicDialog/EditTopicDialog.styles.js":"31","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Spinner/Spinner.js":"32","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Spinner/Spinner.styles.js":"33","/Users/thinhle/dev/react/english-quiz-administrator/src/components/ConfirmDialog/ConfirmDialog.js":"34","/Users/thinhle/dev/react/english-quiz-administrator/src/components/ConfirmDialog/ConfirmDialog.styles.js":"35","/Users/thinhle/dev/react/english-quiz-administrator/src/components/CustomizedSnackbar/CustomizedSnackbar.js":"36","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelSlice.js":"37","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/Level.js":"38","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/Level.styles.js":"39","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelDialog/LevelDialog.js":"40","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelTable/LevelTable.js":"41","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelTable/LevelTable.styles.js":"42","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelDialog/LevelDialog.styles.js":"43","/Users/thinhle/dev/react/english-quiz-administrator/src/components/EnhancedTableHead/EnhancedTableHead.js":"44","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/EnhancedTableToolbar/EnhancedTableToolbar.js":"45","/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/EnhancedTableToolbar/EnhancedTableToolbar.styles.js":"46","/Users/thinhle/dev/react/english-quiz-administrator/src/components/EnhancedTableHead/EnhancedTableHead.styles.js":"47","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicTable/TopicTable.styles.js":"48","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/AddTopicDialog/AddTopicDialog.js":"49","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/AddTopicDialog/AddTopicDialog.styles.js":"50","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/Pool.js":"51","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/Pool.styles.js":"52","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolTable/PoolTable.js":"53","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolSlice.js":"54","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolDialog/PoolDialog.js":"55","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolTable/PoolTable.styles.js":"56","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolDialog/PoolDialog.styles.js":"57"},{"size":17824,"mtime":1608533565661,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":1608532876389,"results":"60","hashOfConfig":"59"},{"size":2383,"mtime":1609324485465,"results":"61","hashOfConfig":"59"},{"size":526,"mtime":1609325766537,"results":"62","hashOfConfig":"59"},{"size":123,"mtime":1608534238786,"results":"63","hashOfConfig":"59"},{"size":5790,"mtime":1609303140123,"results":"64","hashOfConfig":"59"},{"size":1420,"mtime":1609297046459,"results":"65","hashOfConfig":"59"},{"size":4860,"mtime":1608567979862,"results":"66","hashOfConfig":"59"},{"size":894,"mtime":1609296040954,"results":"67","hashOfConfig":"59"},{"size":336,"mtime":1608536158312,"results":"68","hashOfConfig":"59"},{"size":561,"mtime":1609247768371,"results":"69","hashOfConfig":"59"},{"size":3905,"mtime":1609247442702,"results":"70","hashOfConfig":"59"},{"size":590,"mtime":1608556471717,"results":"71","hashOfConfig":"59"},{"size":1690,"mtime":1609298309740,"results":"72","hashOfConfig":"59"},{"size":5697,"mtime":1608556879853,"results":"73","hashOfConfig":"59"},{"size":717,"mtime":1608556199171,"results":"74","hashOfConfig":"59"},{"size":724,"mtime":1608556205577,"results":"75","hashOfConfig":"59"},{"size":425,"mtime":1608556108930,"results":"76","hashOfConfig":"59"},{"size":5697,"mtime":1608556879853,"results":"77","hashOfConfig":"59"},{"size":717,"mtime":1608556199171,"results":"78","hashOfConfig":"59"},{"size":724,"mtime":1608556205577,"results":"79","hashOfConfig":"59"},{"size":16240,"mtime":1609248341782,"results":"80","hashOfConfig":"59"},{"size":1603,"mtime":1608556891392,"results":"81","hashOfConfig":"59"},{"size":387,"mtime":1608567782154,"results":"82","hashOfConfig":"59"},{"size":370,"mtime":1609248402709,"results":"83","hashOfConfig":"59"},{"size":396,"mtime":1609298373159,"results":"84","hashOfConfig":"59"},{"size":391,"mtime":1609297313864,"results":"85","hashOfConfig":"59"},{"size":7803,"mtime":1609318755734,"results":"86","hashOfConfig":"59"},{"size":9020,"mtime":1609322663280,"results":"87","hashOfConfig":"59"},{"size":6307,"mtime":1609322950154,"results":"88","hashOfConfig":"59"},{"size":402,"mtime":1609321192271,"results":"89","hashOfConfig":"59"},{"size":351,"mtime":1609262854480,"results":"90","hashOfConfig":"59"},{"size":229,"mtime":1609262854482,"results":"91","hashOfConfig":"59"},{"size":1922,"mtime":1609262881781,"results":"92","hashOfConfig":"59"},{"size":430,"mtime":1609299015016,"results":"93","hashOfConfig":"59"},{"size":573,"mtime":1609262895021,"results":"94","hashOfConfig":"59"},{"size":5599,"mtime":1609325914862,"results":"95","hashOfConfig":"59"},{"size":5525,"mtime":1609298500444,"results":"96","hashOfConfig":"59"},{"size":391,"mtime":1609298481308,"results":"97","hashOfConfig":"59"},{"size":6078,"mtime":1609298800476,"results":"98","hashOfConfig":"59"},{"size":7674,"mtime":1609297383593,"results":"99","hashOfConfig":"59"},{"size":377,"mtime":1609262434292,"results":"100","hashOfConfig":"59"},{"size":365,"mtime":1609261907161,"results":"101","hashOfConfig":"59"},{"size":1453,"mtime":1609262513836,"results":"102","hashOfConfig":"59"},{"size":464,"mtime":1609248402758,"results":"103","hashOfConfig":"59"},{"size":461,"mtime":1609248402760,"results":"104","hashOfConfig":"59"},{"size":279,"mtime":1609262513839,"results":"105","hashOfConfig":"59"},{"size":379,"mtime":1609297301800,"results":"106","hashOfConfig":"59"},{"size":7990,"mtime":1609318233904,"results":"107","hashOfConfig":"59"},{"size":402,"mtime":1609300705780,"results":"108","hashOfConfig":"59"},{"size":5424,"mtime":1609325558806,"results":"109","hashOfConfig":"59"},{"size":390,"mtime":1609325398208,"results":"110","hashOfConfig":"59"},{"size":7746,"mtime":1609325378793,"results":"111","hashOfConfig":"59"},{"size":5482,"mtime":1609325957893,"results":"112","hashOfConfig":"59"},{"size":5437,"mtime":1609326161251,"results":"113","hashOfConfig":"59"},{"size":376,"mtime":1609325250685,"results":"114","hashOfConfig":"59"},{"size":365,"mtime":1609324645275,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1jjrwed",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thinhle/dev/react/english-quiz-administrator/src/index.js",[],["235","236"],"/Users/thinhle/dev/react/english-quiz-administrator/src/reportWebVitals.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/App.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/app/store.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/App.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/Topic.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/AuthSlice.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Auth.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Auth.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/Logout/Logout.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Auth/ResolveAuth/ResolveAuth.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/Layout/Layout.js",["237","238","239"],"import React, { useCallback, useState } from \"react\";\nimport SideBar from \"../../components/Navigation/SideBar/SideBar\";\nimport {\n  AppBar,\n  Toolbar,\n  Badge,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport useStyles from \"./Layout.styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport ElevationScroll from \"../../components/ElevationScroll/ElevationScroll\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\n// Layout HOC includes AppBar and SideBar\nconst Layout = (props) => {\n  const [maximizedSideBar, setMaximizedSideBar] = useState(true);\n  const [openedMobileSideBar, setOpenedMobileSideBar] = useState(false);\n  const [accountMenuAnchorEl, setAccountMenuAnchorEl] = useState(null);\n  const openAccountMenu = Boolean(accountMenuAnchorEl);\n  const history = useHistory();\n  const classes = useStyles();\n\n  // Handle maximize and minimize the side bar\n  const handleToggleMaximizeSidebar = useCallback(() => {\n    if (maximizedSideBar) {\n      setMaximizedSideBar(false);\n    } else {\n      setMaximizedSideBar(true);\n    }\n  }, [maximizedSideBar]);\n\n  // handle close side bar when mobile size\n  const handleCloseMobileSidebar = useCallback(() => {\n    setOpenedMobileSideBar(false);\n  }, []);\n\n  // handle open side bar when mobile size\n  const handleOpenMobileSidebar = useCallback(() => {\n    setOpenedMobileSideBar(true);\n  }, []);\n\n  // handle open menu context when clicking account icon\n  const handleAccountMenu = (event) => {\n    setAccountMenuAnchorEl(event.currentTarget);\n  };\n\n  // handle close menu context when clicking account icon\n  const handleAccountMenuClose = () => {\n    setAccountMenuAnchorEl(null);\n  };\n\n  const logout = () => {\n    history.replace(\"/logout\");\n  };\n\n  return (\n    <React.Fragment>\n      <SideBar\n        onMobileClose={handleCloseMobileSidebar}\n        mobileOpen={openedMobileSideBar}\n        onToggleMaximize={handleToggleMaximizeSidebar}\n        maximized={maximizedSideBar}\n      />\n      <ElevationScroll {...props}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: maximizedSideBar,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              aria-label=\"open drawer\"\n              onClick={handleOpenMobileSidebar}\n              edge=\"start\"\n              className={classes.menuIcon}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div className={classes.grow}></div>\n            <div className={classes.userSection}>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleAccountMenu}\n              >\n                <AccountCircleIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={accountMenuAnchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={openAccountMenu}\n                onClose={handleAccountMenuClose}\n              >\n                <MenuItem onClick={logout}>Log Out</MenuItem>\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <main className={classes.content}>{props.children}</main>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.object.isRequired,\n};\n\nexport default Layout;\n","/Users/thinhle/dev/react/english-quiz-administrator/src/components/ElevationScroll/ElevationScroll.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/Layout/Layout.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/Sidebar.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/NavigationItem/NavigationItem.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/Sidebar/NavigationItem/NavigationItem.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/NavLink/NavLink.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/Sidebar.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/NavigationItem/NavigationItem.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/NavigationItem/NavigationItem.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/SideBar.js",["240"],"import { Drawer, Hidden, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport useStyles from \"./SideBar.styles\";\nimport hamburgerIcon from \"../../../assets/images/hamburger-icon.svg\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport clsx from \"clsx\";\nimport LevelIcon from \"../../../assets/images/level.svg\";\n\nconst SideBar = (props) => {\n  const classes = useStyles();\n\n  let navItems = (\n    <React.Fragment>\n      <NavigationItem\n        icon={\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M10.7319 2.0726V0.585938C10.7319 0.262299 10.4043 0 9.99997 0C9.59567 0 9.26801 0.262299 9.26801 0.585938V2.0726C8.11765 2.32941 7.27075 3.1752 7.27075 4.17694V6.21368C7.27075 7.21542 8.11765 8.06122 9.26801 8.31802V19.4141C9.26801 19.7377 9.59567 20 9.99997 20C10.4043 20 10.7319 19.7377 10.7319 19.4141V8.31802C11.8825 8.06122 12.7292 7.21542 12.7292 6.21368V4.17694C12.7292 3.1752 11.8825 2.32941 10.7319 2.0726ZM11.2653 6.21368C11.2653 6.77216 10.6976 7.22656 9.99997 7.22656C9.30232 7.22656 8.73467 6.77216 8.73467 6.21368V4.17694C8.73467 3.61847 9.30232 3.16406 9.99997 3.16406C10.6976 3.16406 11.2653 3.61847 11.2653 4.17694V6.21368Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M3.46117 6.14304V0.585938C3.46117 0.262299 3.13351 0 2.72921 0C2.32492 0 1.99726 0.262299 1.99726 0.585938V6.14304C0.846899 6.39984 0 7.24548 0 8.24722V10.284C0 11.2857 0.846899 12.1315 1.99726 12.3883V19.4141C1.99726 19.7377 2.32492 20 2.72921 20C3.13351 20 3.46117 19.7377 3.46117 19.4141V12.3883C4.61172 12.1315 5.45843 11.2857 5.45843 10.284V8.24722C5.45843 7.24548 4.61172 6.39969 3.46117 6.14304ZM3.99451 10.284C3.99451 10.8426 3.42686 11.2968 2.72921 11.2968C2.03157 11.2968 1.46392 10.8426 1.46392 10.284V8.24722C1.46392 7.68875 2.03157 7.23434 2.72921 7.23434C3.42686 7.23434 3.99451 7.68875 3.99451 8.24722V10.284Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M18.0027 10.7884V0.585938C18.0027 0.262299 17.675 0 17.2707 0C16.8664 0 16.5388 0.262299 16.5388 0.585938V10.7884C15.3884 11.0452 14.5415 11.891 14.5415 12.8928V14.9295C14.5415 15.9312 15.3884 16.777 16.5388 17.0338V19.4141C16.5388 19.7377 16.8664 20 17.2707 20C17.675 20 18.0027 19.7377 18.0027 19.4141V17.0337C19.1532 16.7769 19.9999 15.9312 19.9999 14.9295V12.8928C19.9999 11.891 19.1532 11.0452 18.0027 10.7884ZM18.536 14.9295C18.536 15.488 17.9684 15.9424 17.2707 15.9424C16.5731 15.9424 16.0054 15.488 16.0054 14.9295V12.8928C16.0054 12.3341 16.5731 11.8797 17.2707 11.8797C17.9684 11.8797 18.536 12.3341 18.536 12.8928V14.9295Z\"\n              fill=\"#C0BDBD\"\n            />\n          </svg>\n        }\n        link=\"/levels\"\n        onSideBarClose={props.onMobileClose}\n      >\n        Levels\n      </NavigationItem>\n      <NavigationItem\n        icon={\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M9.34341 0H10.6573V3.55469H9.34341V0Z\" fill=\"#C0BDBD\" />\n            <path\n              d=\"M0 5.5271L0.657036 4.51209L4.0705 6.26994L3.41347 7.28495L0 5.5271Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M15.9295 6.26953L19.343 4.51168L20 5.52669L16.5865 7.28454L15.9295 6.26953Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M3.84729 1.66626L4.98528 1.08022L6.9561 4.12482L5.81811 4.71086L3.84729 1.66626Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M13.0455 4.12622L15.0163 1.08162L16.1543 1.66766L14.1835 4.71226L13.0455 4.12622Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M13.285 14.3829C14.8688 13.4368 15.9127 11.8279 15.9127 10C15.9127 7.08754 13.2657 4.72656 10.0004 4.72656C6.73503 4.72656 4.08801 7.08754 4.08801 10C4.08801 11.8279 5.13196 13.4368 6.71572 14.3829V16.4453H13.285V14.3829ZM11.9711 11.7578H10.6573V15.2734H9.34343V11.7578H8.02957V10.5859H11.9711V11.7578Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M6.71571 18.2031C6.71571 19.1739 7.59805 20 8.68649 20H11.3142C12.4026 20 13.285 19.1739 13.285 18.2031V17.6172H6.71571V18.2031Z\"\n              fill=\"#C0BDBD\"\n            />\n          </svg>\n        }\n        link=\"/topics\"\n        onSideBarClose={props.onMobileClose}\n      >\n        Topics\n      </NavigationItem>\n      <NavigationItem\n        icon={\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g clip-path=\"url(#clip0)\">\n              <path\n                d=\"M18.6328 5.87891C18.471 5.87891 18.3398 6.01004 18.3398 6.17188V17.1404C18.3398 17.3171 18.196 17.4609 18.0192 17.4609H1.98078C1.80398 17.4609 1.66016 17.3171 1.66016 17.1404V15.5078C1.66016 15.346 1.52898 15.2148 1.36719 15.2148C1.20539 15.2148 1.07422 15.346 1.07422 15.5078V17.1404C1.07422 17.6402 1.4809 18.0469 1.98078 18.0469H2.8259V19.3164C2.8259 19.6933 3.13258 20 3.50949 20H7.18137C7.55828 20 7.86496 19.6933 7.86496 19.3164V18.0469H12.0056V19.3164C12.0056 19.6933 12.3123 20 12.6892 20H16.3611C16.738 20 17.0446 19.6933 17.0446 19.3164V18.0469H18.0193C18.5191 18.0469 18.9258 17.6402 18.9258 17.1404V6.17188C18.9258 6.01004 18.7946 5.87891 18.6328 5.87891ZM7.27902 19.3164C7.27902 19.3703 7.2352 19.4141 7.18137 19.4141H3.50949C3.45566 19.4141 3.41184 19.3703 3.41184 19.3164V18.0469H7.27902V19.3164ZM16.4587 19.3164C16.4587 19.3703 16.4149 19.4141 16.3611 19.4141H12.6892C12.6354 19.4141 12.5915 19.3703 12.5915 19.3164V18.0469H16.4587V19.3164Z\"\n                fill=\"#C0BDBD\"\n              />\n              <path\n                d=\"M18.0192 0H1.98078C1.4809 0 1.07422 0.406641 1.07422 0.906523V14.0625C1.07422 14.2243 1.20539 14.3555 1.36719 14.3555C1.52898 14.3555 1.66016 14.2243 1.66016 14.0625V0.906523C1.66016 0.729766 1.80398 0.585938 1.98078 0.585938H18.0193C18.1961 0.585938 18.3399 0.729766 18.3399 0.906523V4.76562C18.3399 4.92746 18.4711 5.05859 18.6329 5.05859C18.7946 5.05859 18.9258 4.92746 18.9258 4.76562V0.906523C18.9258 0.406641 18.5191 0 18.0192 0V0Z\"\n                fill=\"#C0BDBD\"\n              />\n              <path\n                d=\"M2.37929 11.0999V12.9829C2.37929 13.4654 2.7312 13.8671 3.19183 13.9454V14.9155C3.19183 15.4252 3.60648 15.8398 4.11612 15.8398H15.7544C16.2641 15.8398 16.6787 15.4252 16.6787 14.9155V3.13133C16.6787 2.62168 16.2641 2.20703 15.7544 2.20703H11.9782C11.8164 2.20703 11.6852 2.33816 11.6852 2.5C11.6852 2.66184 11.8164 2.79297 11.9782 2.79297H15.7544C15.941 2.79297 16.0928 2.94477 16.0928 3.13133V14.9155C16.0928 15.1021 15.941 15.2539 15.7544 15.2539H4.11612C3.92956 15.2539 3.77776 15.1021 3.77776 14.9155V13.9454C4.23839 13.8671 4.5903 13.4654 4.5903 12.9829V11.1C4.5903 10.6174 4.23839 10.2157 3.77776 10.1375V7.90949C4.23839 7.83121 4.5903 7.42953 4.5903 6.94699V5.06406C4.5903 4.58148 4.23839 4.1798 3.77776 4.10156V3.13133C3.77776 2.94477 3.92956 2.79297 4.11612 2.79297H10.3067C10.4685 2.79297 10.5997 2.66184 10.5997 2.5C10.5997 2.33816 10.4685 2.20703 10.3067 2.20703H4.11612C3.60648 2.20703 3.19183 2.62168 3.19183 3.13133V4.10148C2.7312 4.17977 2.37929 4.58145 2.37929 5.06398V6.94691C2.37929 7.42949 2.7312 7.83117 3.19183 7.90941V10.1374C2.7312 10.2157 2.37929 10.6173 2.37929 11.0999ZM4.00437 11.0999V12.9829C4.00437 13.1982 3.82913 13.3735 3.61374 13.3735H3.35585C3.14046 13.3735 2.96523 13.1982 2.96523 12.9829V11.0999C2.96523 10.8845 3.14046 10.7093 3.35585 10.7093H3.61374C3.82913 10.7093 4.00437 10.8846 4.00437 11.0999ZM2.96523 6.94695V5.06402C2.96523 4.84863 3.14046 4.6734 3.35585 4.6734H3.61374C3.82913 4.6734 4.00437 4.84863 4.00437 5.06402V6.94695C4.00437 7.16234 3.82913 7.33758 3.61374 7.33758H3.35585C3.14046 7.33758 2.96523 7.1623 2.96523 6.94695Z\"\n                fill=\"#C0BDBD\"\n              />\n              <path\n                d=\"M13.1986 12.2087C13.3214 12.314 13.5063 12.3 13.6117 12.1772C14.3645 11.3005 14.779 10.1805 14.779 9.02344C14.779 6.35258 12.6061 4.17969 9.93527 4.17969C7.26441 4.17969 5.09152 6.35258 5.09152 9.02344C5.09152 11.6943 7.26441 13.8672 9.93527 13.8672C10.8489 13.8672 11.7388 13.6114 12.5088 13.1276C12.6458 13.0415 12.6871 12.8607 12.601 12.7237C12.5149 12.5867 12.3341 12.5455 12.1971 12.6315C11.5206 13.0566 10.7385 13.2812 9.93527 13.2812C7.5875 13.2812 5.67746 11.3712 5.67746 9.02344C5.67746 6.67566 7.5875 4.76562 9.93527 4.76562C12.283 4.76562 14.1931 6.67566 14.1931 9.02344C14.1931 10.0405 13.8287 11.025 13.1671 11.7955C13.0618 11.9183 13.0758 12.1033 13.1986 12.2087Z\"\n                fill=\"#C0BDBD\"\n              />\n              <path\n                d=\"M12.9716 9.31616C13.1334 9.31616 13.2646 9.18503 13.2646 9.02319C13.2646 8.86135 13.1334 8.73022 12.9716 8.73022H11.8459C11.7979 8.41561 11.6735 8.12592 11.4926 7.88018L12.2895 7.08334C12.4039 6.96893 12.4039 6.78342 12.2895 6.66904C12.1751 6.55459 11.9896 6.55463 11.8752 6.66901L11.0783 7.46584C10.8326 7.28502 10.5429 7.16061 10.2283 7.1126V5.98682C10.2283 5.82498 10.0971 5.69385 9.93531 5.69385C9.77352 5.69385 9.64235 5.82498 9.64235 5.98682V7.1126C9.32774 7.16065 9.03805 7.28502 8.79231 7.46588L7.99543 6.66901C7.88102 6.55463 7.69551 6.55459 7.58114 6.66904C7.46672 6.78346 7.46672 6.96897 7.58114 7.08334L8.37801 7.88018C8.19715 8.12592 8.07278 8.41565 8.02473 8.73022H6.89899C6.73719 8.73022 6.60602 8.86135 6.60602 9.02319C6.60602 9.18503 6.73719 9.31616 6.89899 9.31616H8.02473C8.07278 9.63077 8.19715 9.92046 8.37801 10.1662L7.58114 10.963C7.46672 11.0775 7.46672 11.263 7.58114 11.3773C7.69555 11.4918 7.88102 11.4918 7.99543 11.3774L8.79231 10.5805C9.03805 10.7613 9.32774 10.8857 9.64235 10.9338V12.0596C9.64235 12.2214 9.77352 12.3525 9.93531 12.3525C10.0971 12.3525 10.2283 12.2214 10.2283 12.0596V10.9338C10.5429 10.8857 10.8326 10.7614 11.0783 10.5805L11.8752 11.3774C11.9896 11.4918 12.1751 11.4918 12.2895 11.3773C12.4039 11.2629 12.4039 11.0774 12.2895 10.963L11.4926 10.1662C11.6735 9.92046 11.7979 9.63077 11.8459 9.31616H12.9716ZM9.93528 10.37C9.19262 10.37 8.58844 9.76581 8.58844 9.02319C8.58844 8.28057 9.19262 7.67635 9.93528 7.67635C10.6779 7.67635 11.2822 8.28057 11.2822 9.02319C11.2822 9.76581 10.6779 10.37 9.93528 10.37Z\"\n                fill=\"#C0BDBD\"\n              />\n            </g>\n            <defs>\n              <clipPath id=\"clip0\">\n                <rect width=\"20\" height=\"20\" fill=\"white\" />\n              </clipPath>\n            </defs>\n          </svg>\n        }\n        link=\"/pools\"\n        onSideBarClose={props.onMobileClose}\n      >\n        Pools\n      </NavigationItem>\n      <NavigationItem\n        icon={\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M19.3803 12.5578L13.4819 3.10471C12.7267 1.89438 11.425 1.17188 10 1.17188C8.57498 1.17188 7.27325 1.89438 6.5181 3.10471L0.619659 12.5578C0.214233 13.2076 0 13.9575 0 14.7266C0 16.9882 1.8399 18.8281 4.10156 18.8281H15.8984C18.1601 18.8281 20 16.9882 20 14.7266C20 13.9575 19.7858 13.2076 19.3803 12.5578ZM15.8984 17.6562H4.10156C2.48611 17.6562 1.17188 16.342 1.17188 14.7266C1.17188 14.1771 1.32477 13.6417 1.61392 13.1783L7.51236 3.72513C8.05206 2.86011 8.98193 2.34375 10 2.34375C11.0181 2.34375 11.9479 2.86011 12.4876 3.72513L18.3861 13.1783C18.6752 13.6417 18.8281 14.1771 18.8281 14.7266C18.8281 16.342 17.5139 17.6562 15.8984 17.6562Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M11.4935 4.3454C11.1693 3.82584 10.611 3.51562 10 3.51562C9.38904 3.51562 8.83072 3.82584 8.50647 4.3454L2.60818 13.7985C2.43515 14.0758 2.34375 14.3967 2.34375 14.7266C2.34375 15.6958 3.13232 16.4844 4.10156 16.4844H15.8984C16.8677 16.4844 17.6562 15.6958 17.6562 14.7266C17.6562 14.3967 17.5648 14.0758 17.392 13.7985L11.4935 4.3454ZM10.5859 14.1016H9.41406V12.9297H10.5859V14.1016ZM10.5859 11.7578H9.41406V7.61719H10.5859V11.7578Z\"\n              fill=\"#C0BDBD\"\n            />\n          </svg>\n        }\n        link=\"/issues\"\n        onSideBarClose={props.onMobileClose}\n      >\n        Issues\n      </NavigationItem>\n      <NavigationItem\n        icon={\n          <svg\n            width=\"16\"\n            height=\"20\"\n            viewBox=\"0 0 16 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M7.879 9.63402C9.14813 9.63402 10.2471 9.15932 11.145 8.22274C12.0429 7.28632 12.4981 6.14054 12.4981 4.81685C12.4981 3.49362 12.0429 2.3477 11.1449 1.41097C10.2468 0.474697 9.14798 0 7.879 0C6.60973 0 5.51106 0.474697 4.61313 1.41112C3.7152 2.34755 3.25987 3.49347 3.25987 4.81685C3.25987 6.14054 3.7152 7.28647 4.61328 8.22289C5.51135 9.15917 6.61017 9.63402 7.879 9.63402Z\"\n              fill=\"#C0BDBD\"\n            />\n            <path\n              d=\"M15.9612 15.3788C15.9353 14.9891 15.8829 14.564 15.8058 14.1151C15.728 13.6628 15.6278 13.2353 15.5078 12.8445C15.3839 12.4406 15.2153 12.0418 15.007 11.6595C14.7907 11.2628 14.5367 10.9173 14.2517 10.6331C13.9537 10.3357 13.5887 10.0966 13.1668 9.92218C12.7463 9.74869 12.2803 9.6608 11.7818 9.6608C11.586 9.6608 11.3967 9.74457 11.031 9.99283C10.806 10.1459 10.5428 10.3229 10.249 10.5186C9.99777 10.6856 9.65744 10.842 9.23708 10.9836C8.82697 11.122 8.41056 11.1922 7.99956 11.1922C7.58857 11.1922 7.1723 11.122 6.76175 10.9836C6.34183 10.8421 6.0015 10.6857 5.75057 10.5188C5.45955 10.3249 5.19619 10.1479 4.96779 9.99267C4.60259 9.74441 4.41312 9.66064 4.21735 9.66064C3.71871 9.66064 3.25285 9.74869 2.83249 9.92233C2.41081 10.0964 2.04576 10.3355 1.74743 10.6332C1.46255 10.9177 1.20841 11.263 0.992447 11.6595C0.784242 12.0418 0.615689 12.4405 0.491614 12.8447C0.371783 13.2354 0.271558 13.6628 0.193719 14.1151C0.116612 14.5634 0.0642318 14.9887 0.0383342 15.3793C0.0128756 15.762 0 16.1592 0 16.5603C0 17.6043 0.318233 18.4495 0.945772 19.0728C1.56556 19.6879 2.38565 19.9999 3.38292 19.9999H12.6171C13.6144 19.9999 14.4341 19.688 15.0541 19.0728C15.6818 18.4499 16 17.6046 16 16.5602C15.9999 16.1572 15.9868 15.7597 15.9612 15.3788Z\"\n              fill=\"#C0BDBD\"\n            />\n          </svg>\n        }\n        link=\"/users\"\n        onSideBarClose={props.onMobileClose}\n      >\n        Users\n      </NavigationItem>\n    </React.Fragment>\n  );\n\n  const drawerContent = (\n    <React.Fragment>\n      <div className={classes.toolbar}>\n        <IconButton\n          aria-label=\"open drawer\"\n          onClick={props.onToggleMaximize}\n          className={classes.menuIcon}\n        >\n          <img alt=\"hamburger-icon\" src={hamburgerIcon} />\n        </IconButton>\n      </div>\n      <div className={classes.navItems}>{navItems}</div>\n    </React.Fragment>\n  );\n\n  const { window } = props;\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <nav\n      className={clsx(classes.drawer, {\n        [classes.drawerMaximized]: props.maximized,\n        [classes.drawerMinimized]: !props.maximized,\n      })}\n      aria-label=\"mailbox folders\"\n    >\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={props.mobileOpen}\n          onClose={props.onMobileClose}\n          classes={{\n            paper: classes.paperDrawer,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawerContent}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.paperDrawer, {\n              [classes.drawerMaximized]: props.maximized,\n              [classes.drawerMinimized]: !props.maximized,\n            }),\n            paperAnchorLeft: classes.paperAnchorLeft,\n          }}\n          open\n        >\n          {drawerContent}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nexport default SideBar;\n","/Users/thinhle/dev/react/english-quiz-administrator/src/components/Navigation/SideBar/SideBar.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/api/index.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/ContentContainer/ContentContainer.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/ContentContainer/ContentContainer.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/Topic.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicTable/TopicTable.js",["241"],"import React, { useState } from \"react\";\nimport {\n  IconButton,\n  Paper,\n  TableContainer,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  TablePagination,\n  Button,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { setTopicIdToEdit, setTopicIdToDelete } from \"../TopicSlice\";\nimport useStyles from \"./TopicTable.styles\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport EnhancedToolbar from \"../../../hoc/EnhancedTableToolbar/EnhancedTableToolbar\";\nimport EnhancedTableHead from \"../../../components/EnhancedTableHead/EnhancedTableHead\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SimpleBar from \"simplebar-react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useDispatch } from \"react-redux\";\n\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: `rgba(26, 115, 232, 0.1)`,\n    },\n  },\n}))(TableRow);\n\nconst TopicTable = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"name\");\n\n  const [actionMenuAnchorEl, setActionMenuAnchorEl] = useState(null);\n\n  const headCells = [\n    {\n      id: \"#\",\n      label: \"#\",\n    },\n    {\n      id: \"name\",\n      label: \"Topic name\",\n    },\n    {\n      id: \"level\",\n      label: \"Level\",\n    },\n    {\n      id: \"order\",\n      isNumber: true,\n      label: \"Order\",\n    },\n    {\n      id: \"createdAt\",\n      label: \"Created At\",\n    },\n    {\n      id: \"actions\",\n      label: \"Actions\",\n    },\n  ];\n\n  const handleChangePage = (e, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  const descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const getComparator = (order, orderBy) => {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  };\n\n  const stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  };\n\n  const createSortHandler = (property) => () => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, props.topics.length - page * rowsPerPage);\n\n  // handle open menu context when clicking account icon\n  const handleOpenActionMenu = (event) => {\n    setActionMenuAnchorEl(event.currentTarget);\n  };\n\n  // handle close menu context when clicking account icon\n  const handleCloseActionMenu = () => {\n    setActionMenuAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.topicTable}>\n      <Paper className={classes.paper}>\n        <EnhancedToolbar title={\"Topics\"}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={props.onAddTopic}\n          >\n            New Topic\n          </Button>\n        </EnhancedToolbar>\n        <TableContainer>\n          <SimpleBar style={{ maxHeight: \"calc(100% - 10px)\" }}>\n            <Table\n              style={{\n                minWidth: 700,\n              }}\n              stickyHeader\n            >\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onCreateSortHandler={createSortHandler}\n                headCells={headCells}\n                isAllowSort={true}\n              />\n              <TableBody>\n                {stableSort(props.topics, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <StyledTableRow key={row._id} className={classes.row}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {rowsPerPage * page + index + 1}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Button\n                          style={{\n                            color: \"#d7385e\",\n                            fontWeight: \"bold\",\n                          }}\n                          onClick={() => {\n                            dispatch(setTopicIdToEdit(row._id));\n                            console.log(row);\n                          }}\n                        >\n                          {row.name}\n                        </Button>\n                      </TableCell>\n                      <TableCell align=\"left\">{row.level.name}</TableCell>\n                      <TableCell align=\"center\">{row.order}</TableCell>\n                      <TableCell align=\"left\">{row.createdAt}</TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton\n                          id={`${row._id}-menu`} // <-- Magic code\n                          onClick={handleOpenActionMenu}\n                          style={{ padding: 0 }}\n                        >\n                          <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                          anchorEl={actionMenuAnchorEl}\n                          anchorOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                          }}\n                          keepMounted\n                          transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                          }}\n                          open={\n                            actionMenuAnchorEl\n                              ? actionMenuAnchorEl.id === `${row._id}-menu`\n                              : false\n                          } // <-- Magic code\n                          onClose={handleCloseActionMenu}\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              dispatch(setTopicIdToEdit(row._id));\n                              setActionMenuAnchorEl(null);\n                            }}\n                          >\n                            Edit\n                          </MenuItem>\n                          <MenuItem\n                            onClick={() => {\n                              dispatch(setTopicIdToDelete(row._id));\n                              setActionMenuAnchorEl(null);\n                            }}\n                          >\n                            Delete\n                          </MenuItem>\n                        </Menu>\n                      </TableCell>\n                    </StyledTableRow>\n                  ))}\n                {/* {emptyRows > 0 && (\n                  <TableRow style={{ height: 53 * emptyRows }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )} */}\n              </TableBody>\n            </Table>\n          </SimpleBar>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={props.topics.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default TopicTable;\n","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/EditTopicDialog/EditTopicDialog.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicSlice.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/EditTopicDialog/EditTopicDialog.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Spinner/Spinner.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/Spinner/Spinner.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/ConfirmDialog/ConfirmDialog.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/ConfirmDialog/ConfirmDialog.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/CustomizedSnackbar/CustomizedSnackbar.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelSlice.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/Level.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/Level.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelDialog/LevelDialog.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelTable/LevelTable.js",["242"],"import React, { useState } from \"react\";\nimport {\n  IconButton,\n  Paper,\n  TableContainer,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  TablePagination,\n  Button,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { setLevelIdToEdit, setLevelIdToDelete } from \"../LevelSlice\";\nimport useStyles from \"./LevelTable.styles\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport EnhancedToolbar from \"../../../hoc/EnhancedTableToolbar/EnhancedTableToolbar\";\nimport EnhancedTableHead from \"../../../components/EnhancedTableHead/EnhancedTableHead\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SimpleBar from \"simplebar-react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useDispatch } from \"react-redux\";\n\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: `rgba(26, 115, 232, 0.1)`,\n    },\n  },\n}))(TableRow);\n\nconst LevelTable = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"name\");\n\n  const [actionMenuAnchorEl, setActionMenuAnchorEl] = useState(null);\n\n  const headCells = [\n    {\n      id: \"#\",\n      label: \"#\",\n    },\n    {\n      id: \"name\",\n      label: \"Level name\",\n    },\n    {\n      id: \"order\",\n      isNumber: true,\n      label: \"Order\",\n    },\n    {\n      id: \"createdAt\",\n      label: \"Created At\",\n    },\n    {\n      id: \"actions\",\n      label: \"Actions\",\n    },\n  ];\n\n  const handleChangePage = (e, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  const descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const getComparator = (order, orderBy) => {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  };\n\n  const stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  };\n\n  const createSortHandler = (property) => () => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, props.levels.length - page * rowsPerPage);\n\n  // handle open menu context when clicking account icon\n  const handleOpenActionMenu = (event) => {\n    setActionMenuAnchorEl(event.currentTarget);\n  };\n\n  // handle close menu context when clicking account icon\n  const handleCloseActionMenu = () => {\n    setActionMenuAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.levelTable}>\n      <Paper className={classes.paper}>\n        <EnhancedToolbar title={\"Levels\"}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={props.onAddLevel}\n          >\n            New Level\n          </Button>\n        </EnhancedToolbar>\n        <TableContainer>\n          <SimpleBar style={{ maxHeight: \"calc(100% - 10px)\" }}>\n            <Table\n              style={{\n                minWidth: 700,\n              }}\n              stickyHeader\n            >\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onCreateSortHandler={createSortHandler}\n                headCells={headCells}\n                isAllowSort={true}\n              />\n              <TableBody>\n                {stableSort(props.levels, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <StyledTableRow key={row._id} className={classes.row}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {rowsPerPage * page + index + 1}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        <Button\n                          style={{\n                            color: \"#d7385e\",\n                            fontWeight: \"bold\",\n                          }}\n                          onClick={() => {\n                            dispatch(setLevelIdToEdit(row._id));\n                            console.log(row);\n                          }}\n                        >\n                          {row.name}\n                        </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">{row.order}</TableCell>\n                      <TableCell align=\"left\">{row.createdAt}</TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton\n                          id={`${row._id}-menu`} // <-- Magic code\n                          onClick={handleOpenActionMenu}\n                          style={{ padding: 0 }}\n                        >\n                          <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                          anchorEl={actionMenuAnchorEl}\n                          anchorOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                          }}\n                          keepMounted\n                          transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                          }}\n                          open={\n                            actionMenuAnchorEl\n                              ? actionMenuAnchorEl.id === `${row._id}-menu`\n                              : false\n                          } // <-- Magic code\n                          onClose={handleCloseActionMenu}\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              dispatch(setLevelIdToEdit(row._id));\n                              setActionMenuAnchorEl(null);\n                            }}\n                          >\n                            Edit\n                          </MenuItem>\n                          <MenuItem\n                            onClick={() => {\n                              dispatch(setLevelIdToDelete(row._id));\n                              setActionMenuAnchorEl(null);\n                            }}\n                          >\n                            Delete\n                          </MenuItem>\n                        </Menu>\n                      </TableCell>\n                    </StyledTableRow>\n                  ))}\n                {/* {emptyRows > 0 && (\n                  <TableRow style={{ height: 53 * emptyRows }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )} */}\n              </TableBody>\n            </Table>\n          </SimpleBar>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={props.levels.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default LevelTable;\n","/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelTable/LevelTable.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Level/LevelDialog/LevelDialog.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/EnhancedTableHead/EnhancedTableHead.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/EnhancedTableToolbar/EnhancedTableToolbar.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/hoc/EnhancedTableToolbar/EnhancedTableToolbar.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/components/EnhancedTableHead/EnhancedTableHead.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/TopicTable/TopicTable.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/AddTopicDialog/AddTopicDialog.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Topic/AddTopicDialog/AddTopicDialog.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/Pool.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/Pool.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolTable/PoolTable.js",["243"],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolSlice.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolDialog/PoolDialog.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolTable/PoolTable.styles.js",[],"/Users/thinhle/dev/react/english-quiz-administrator/src/containers/Pool/PoolDialog/PoolDialog.styles.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":6,"endColumn":8},{"ruleId":"248","severity":1,"message":"252","line":15,"column":8,"nodeType":"250","messageId":"251","endLine":15,"endColumn":25},{"ruleId":"248","severity":1,"message":"253","line":18,"column":10,"nodeType":"250","messageId":"251","endLine":18,"endColumn":21},{"ruleId":"248","severity":1,"message":"254","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":17},{"ruleId":"248","severity":1,"message":"255","line":113,"column":9,"nodeType":"250","messageId":"251","endLine":113,"endColumn":18},{"ruleId":"248","severity":1,"message":"255","line":109,"column":9,"nodeType":"250","messageId":"251","endLine":109,"endColumn":18},{"ruleId":"248","severity":1,"message":"255","line":109,"column":9,"nodeType":"250","messageId":"251","endLine":109,"endColumn":18},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'NotificationsIcon' is defined but never used.","'useSelector' is defined but never used.","'LevelIcon' is defined but never used.","'emptyRows' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]